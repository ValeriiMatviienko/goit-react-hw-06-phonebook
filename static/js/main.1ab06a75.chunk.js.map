{"version":3,"sources":["Filter/Filter.module.css","Container/Container.module.css","Redux/actions.js","Redux/reducer.js","Redux/store.js","InputForm/InputForm.jsx","Filter/Filter.jsx","Phonebook/PhonebookItem.jsx","Phonebook/Phonebook.jsx","Phonebook/Wrapper.js","Container/Container.jsx","App.jsx","index.js","InputForm/InputForm.module.css","Phonebook/Phonebook.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","items","createReducer","actions","state","filter","contact","_","combineReducers","contacts","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","rootReducer","devTools","process","persistor","persistStore","InputForm","handleChange","event","currentTarget","value","setState","handleSubmit","e","preventDefault","props","onSubmit","some","item","toLowerCase","alert","reset","this","className","s","form","label","htmlFor","type","onChange","input","placeholder","btn","Component","connect","dispatch","Filter","wrapper","defaultProps","target","PhonebookItem","onDelete","close","onClick","Phonebook","list","map","getVisibleContacts","normalizedFilter","includes","Container","title","children","section","heading","App","contactId","getFilteredContacts","lowerCaseFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","newContacts","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1ab06a75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2aENm\",\"input\":\"Filter_input__2gmsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__1sn-e\",\"heading\":\"Container_heading__1p4vQ\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/addContact', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/deleteContact');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n// eslint-disable-next-line\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport rootReducer from './reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter', '_persist'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line\r\nexport default { store, persistor };\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../Redux/actions';\r\nimport s from './InputForm.module.css';\r\n\r\nclass InputForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n    const sameContact = contacts.some(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (sameContact) {\r\n      alert(`${name} Already exists!!!`);\r\n      this.reset();\r\n      return;\r\n    }\r\n    onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Name\"\r\n        />\r\n\r\n        <label className={s.label} htmlFor=\"number\">\r\n          Number\r\n        </label>\r\n        <input\r\n          id=\"number\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"Phone number\"\r\n        />\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\r\n  contacts,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport actions from '../Redux/actions';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.wrapper}>\r\n    <label className={s.label}>\r\n      Find by Name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.defaultProps = {\r\n  filter: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ filter }) => ({\r\n  value: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => {\r\n    return dispatch(actions.changeFilter(e.target.value));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Phonebook/Phonebook.module.css';\r\n\r\nconst PhonebookItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name} : {number}\r\n      </span>\r\n      <button type=\"button\" className={s.close} onClick={() => onDelete(id)}>\r\n        +\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nPhonebookItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PhonebookItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport PhonebookItem from './PhonebookItem';\r\n\r\nimport s from '../Phonebook/Phonebook.module.css';\r\n\r\nconst Phonebook = ({ contacts, onDelete }) => {\r\n  return (\r\n    <>\r\n      {contacts && (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => (\r\n            <li className={s.item} key={contact.id}>\r\n              <PhonebookItem {...contact} onDelete={onDelete} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPhonebook.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nPhonebook.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Phonebook;\r\n","import { connect } from 'react-redux';\r\nimport actions from '../Redux/actions';\r\nimport Phonebook from './Phonebook';\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  const filtered = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return filtered;\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { contacts, filter } }) => {\r\n  return {\r\n    contacts: getVisibleContacts(contacts, filter),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    {title && <h2 className={s.heading}>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\n\r\nContainer.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport InputForm from './InputForm/InputForm';\r\nimport Filter from './Filter/Filter';\r\nimport Phonebook from './Phonebook/Wrapper';\r\nimport Container from './Container/Container';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: '',\r\n    number: '',\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, { contacts }) {\r\n    const newContacts = this.state.contacts;\r\n\r\n    if (newContacts !== contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(newContacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    const { contacts } = this.state;\r\n\r\n    const sameContact = contacts.some(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n\r\n    if (sameContact) {\r\n      alert(`${name} is already exists!`);\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    const { value } = event.currentTarget;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const lowerCaseFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(lowerCaseFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const filteredContacts = this.getFilteredContacts();\r\n    const { filter } = this.state;\r\n    return (\r\n      <>\r\n        <Container title=\"Phonebook\">\r\n          <InputForm onSubmit={this.addContact} />\r\n        </Container>\r\n        <Container title=\"Contacts\">\r\n          <Filter value={filter} onChange={this.changeFilter} />\r\n          <Phonebook\r\n            contacts={filteredContacts}\r\n            onDelete={this.deleteContact}\r\n          />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './Redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__2tqzx\",\"label\":\"InputForm_label__1r04i\",\"input\":\"InputForm_input__3wmhF\",\"btn\":\"InputForm_btn__cLOTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__wTfFi\",\"item\":\"Phonebook_item__3dvKv\",\"close\":\"Phonebook_close__2wauR\"};"],"sourceRoot":""}